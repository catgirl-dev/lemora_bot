import logging
import random

from aiogram import Router
from aiogram.filters import Command, CommandObject
from aiogram.types import Message, ReactionTypeEmoji

from configuration.environment import KISSER_ID, bot
from database.models import Rules
from filters.can_kiss import CanKiss
from filters.is_admin import IsAdmin
from filters.is_group import ChatTypeFilter
from texts.base import kiss_message
from texts.random_command_answers import random_answers

commands: Router = Router()


@commands.message(Command('random'))
async def rand(message: Message):
    """ C–ª—É—á–∞–π–Ω–∞—è —Ñ—Ä–∞–∑–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ random_answers """
    await message.reply(random.choice(random_answers))


@commands.message(Command('change_rules'), ChatTypeFilter(), IsAdmin())
async def change_rules(message: Message, command: CommandObject):
    """ –ü–æ–∑–≤–æ–ª—è–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞ """
    rules_to_add: str = command.args

    if not rules_to_add:
        await message.reply(
            '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã! '
            '–ù–∞–ø—Ä–∏–º–µ—Ä: /change_rules https://telegra.ph/Pravila'
        )
        return

    try:
        rules, created = Rules.get_or_create(
            chat_id=message.chat.id,
            defaults={"rules": rules_to_add}
        )

        if not created:
            rules.rules = rules_to_add
            rules.save()

        await message.reply('–ü—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!')
    except Exception as e:
        logging.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø—Ä–∞–≤–∏–ª: {e}')
        await message.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–∞–≤–∏–ª. '
                           '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–≤—Ç–æ—Ä–æ–º –±–æ—Ç–∞.')


@commands.message(Command('rules'))
async def send_rules(message: Message):
    """ –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Å—ã–ª–∫–æ–π –Ω–∞ –ø—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞ """
    rules = Rules.get_or_none(chat_id=message.chat.id)
    if not rules:
        await message.reply('–í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø—Ä–∞–≤–∏–ª–∞ –≤–∞—à–µ–≥–æ —á–∞—Ç–∞.'
                            '–í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –∏—Ö –∫–æ–º–∞–Ω–¥–æ–π /change_rules.'
                            '–ù–∞–ø—Ä–∏–º–µ—Ä: /change_rules https://telegra.ph/Pravila')
        return

    rules_to_reply: str = str(rules.rules)

    await message.reply(
        f'<a href="{rules_to_reply}">–ü—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞</a>',
        parse_mode="HTML",
        disable_web_page_preview=True
    )


@commands.message(Command('kiss'), CanKiss())
async def kiss_user(message: Message):
    """ –®—É—Ç–æ—á–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞, —Ç–æ–ª—å–∫–æ –¥–ª—è –º–µ–Ω—è :) """
    if message.from_user.id != KISSER_ID:
        await message.reply('–≠—Ç—É –∫–æ–º–∞–Ω–¥—É –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –õ–µ–º—É—Ä–∫–∞!')
        return
    if not message.reply_to_message:
        await message.reply('–ö–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.')
        return

    await bot.set_message_reaction(
        chat_id=message.chat.id,
        message_id=message.reply_to_message.message_id,
        reaction=[ReactionTypeEmoji(emoji='üíã')]
    )
    await bot.send_message(
        chat_id=message.chat.id,
        text=kiss_message,
        reply_to_message_id=message.reply_to_message.message_id
    )
