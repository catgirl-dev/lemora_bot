import logging

from aiogram import Router
from aiogram.filters import Command, CommandObject
from aiogram.types import Message, ReactionTypeEmoji

from configuration.environment import KISSER_ID, bot
from database.models import Rules
from filters.can_kiss import CanKiss
from filters.can_restrict import CanRestrict
from filters.is_admin import IsAdmin
from filters.is_group import IsGroup
from handlers.commands.user import commands
from texts.base import kiss_message

admin: Router = Router()
admin.message.filter(IsGroup(), IsAdmin())

@admin.message(Command('ban'), CanRestrict())
async def ban_user(message: Message):
    """ –ö–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—á–µ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å
    –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä. """
    if not message.reply_to_message:
        await message.reply('–ö–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.')
        return

    await message.chat.ban(message.reply_to_message.from_user.id)
    await message.reply('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏–ª —É–¥–∞—Ä –±–∞–Ω—Ö–∞–º–º–µ—Ä–æ–º!')


@commands.message(Command('change_rules'))
async def change_rules(message: Message, command: CommandObject):
    """ –ü–æ–∑–≤–æ–ª—è–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞ """
    rules_to_add: str = command.args

    if not rules_to_add:
        await message.reply(
            '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã! '
            '–ù–∞–ø—Ä–∏–º–µ—Ä: /change_rules https://telegra.ph/Pravila'
        )
        return

    try:
        rules, created = Rules.get_or_create(
            chat_id=message.chat.id,
            defaults={"rules": rules_to_add}
        )

        if not created:
            rules.rules = rules_to_add
            rules.save()

        await message.reply('–ü—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!')
    except Exception as e:
        logging.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø—Ä–∞–≤–∏–ª: {e}')
        await message.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–∞–≤–∏–ª. '
                           '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–≤—Ç–æ—Ä–æ–º –±–æ—Ç–∞.')


@commands.message(Command('kiss'), CanKiss())
async def kiss_user(message: Message):
    """ –®—É—Ç–æ—á–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞, —Ç–æ–ª—å–∫–æ –¥–ª—è –º–µ–Ω—è :) """
    if message.from_user.id != KISSER_ID:
        await message.reply('–≠—Ç—É –∫–æ–º–∞–Ω–¥—É –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –õ–µ–º—É—Ä–∫–∞!')
        return
    if not message.reply_to_message:
        await message.reply('–ö–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.')
        return

    await bot.set_message_reaction(
        chat_id=message.chat.id,
        message_id=message.reply_to_message.message_id,
        reaction=[ReactionTypeEmoji(emoji='üíã')]
    )
    await bot.send_message(
        chat_id=message.chat.id,
        text=kiss_message,
        reply_to_message_id=message.reply_to_message.message_id
    )
